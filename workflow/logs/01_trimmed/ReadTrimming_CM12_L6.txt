Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 5.0
Could not detect version of Python used by Cutadapt from the first line of Cutadapt (but found this: >>>#!/bin/sh<<<)
Letting the (modified) Cutadapt deal with the Python version instead
pigz 2.8
Parallel gzip (pigz) detected. Proceeding with multicore (de)compression using 7 cores

igzip command line interface 2.31.1
igzip detected. Using igzip for decompressing

Output will be written into the directory: /work/FAC/FBM/DMF/pengel/spirit/gsartonl/metagenomics/01_trimmed/
Using user-specified basename (>>CM12_L6<<) instead of deriving the filename from the input file(s)


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> /scratch/gsartonl/metagenomics/00_data/CM12_L6_R1_001_TU3G2L89X8m0.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Nextera	8021	CTGTCTCTTATA	1000000	0.80
smallRNA	4	TGGAATTCTCGG	1000000	0.00
Illumina	2	AGATCGGAAGAGC	1000000	0.00
Using Nextera adapter for trimming (count: 8021). Second best hit was smallRNA (count: 4)

Writing report to '/work/FAC/FBM/DMF/pengel/spirit/gsartonl/metagenomics/01_trimmed/CM12_L6_R1_001_TU3G2L89X8m0.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /scratch/gsartonl/metagenomics/00_data/CM12_L6_R1_001_TU3G2L89X8m0.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 5.0
Python version: could not detect
Number of cores used for trimming: 7
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Maximum number of tolerated Ns: 1
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 80 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /work/FAC/FBM/DMF/pengel/spirit/gsartonl/metagenomics/01_trimmed/fastqc_trimmed/'
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 5.0). Setting -j 7
Writing final adapter and quality trimmed output to CM12_L6_R1_001_TU3G2L89X8m0_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /scratch/gsartonl/metagenomics/00_data/CM12_L6_R1_001_TU3G2L89X8m0.fastq.gz <<< 
10000000 sequences processed
20000000 sequences processed
This is cutadapt 5.0 with Python 3.12.9
Command line parameters: -j 7 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /scratch/gsartonl/metagenomics/00_data/CM12_L6_R1_001_TU3G2L89X8m0.fastq.gz
Processing single-end reads on 7 cores ...

=== Summary ===

Total reads processed:              23,434,803
Reads with adapters:                 6,395,908 (27.3%)
Reads written (passing filters):    23,434,803 (100.0%)

Total basepairs processed: 3,538,655,253 bp
Quality-trimmed:               9,156,690 bp (0.3%)
Total written (filtered):  3,511,561,048 bp (99.2%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 6395908 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 27.0%
  C: 19.4%
  G: 21.5%
  T: 32.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4510651	5858700.8	0	4510651
2	1190589	1464675.2	0	1190589
3	348235	366168.8	0	348235
4	67474	91542.2	0	67474
5	30417	22885.5	0	30417
6	9390	5721.4	0	9390
7	7091	1430.3	0	7091
8	5787	357.6	0	5787
9	5537	89.4	0	5268 269
10	5947	22.3	1	5397 550
11	6175	5.6	1	5757 418
12	5956	1.4	1	5648 308
13	7429	1.4	1	7006 423
14	5766	1.4	1	5479 287
15	7204	1.4	1	6924 280
16	5852	1.4	1	5601 251
17	5108	1.4	1	4764 344
18	4267	1.4	1	3990 277
19	3644	1.4	1	3511 133
20	3701	1.4	1	3522 179
21	4561	1.4	1	4245 316
22	4514	1.4	1	4320 194
23	4108	1.4	1	3923 185
24	4133	1.4	1	3977 156
25	4684	1.4	1	4502 182
26	4256	1.4	1	3963 293
27	5107	1.4	1	4805 302
28	2496	1.4	1	2292 204
29	3074	1.4	1	2770 304
30	2913	1.4	1	2768 145
31	2061	1.4	1	1951 110
32	3186	1.4	1	2959 227
33	2592	1.4	1	2452 140
34	3818	1.4	1	3629 189
35	3006	1.4	1	2828 178
36	3831	1.4	1	3633 198
37	2469	1.4	1	2279 190
38	3165	1.4	1	2956 209
39	1318	1.4	1	1217 101
40	2062	1.4	1	1941 121
41	1909	1.4	1	1744 165
42	2167	1.4	1	2011 156
43	2051	1.4	1	1817 234
44	2835	1.4	1	2669 166
45	3565	1.4	1	3364 201
46	2085	1.4	1	1942 143
47	1780	1.4	1	1708 72
48	1680	1.4	1	1591 89
49	1588	1.4	1	1454 134
50	1321	1.4	1	1090 231
51	1303	1.4	1	1095 208
52	1258	1.4	1	1160 98
53	1493	1.4	1	1405 88
54	1697	1.4	1	1559 138
55	1870	1.4	1	1730 140
56	1890	1.4	1	1788 102
57	2183	1.4	1	2060 123
58	1244	1.4	1	1151 93
59	1195	1.4	1	1092 103
60	1213	1.4	1	988 225
61	963	1.4	1	867 96
62	820	1.4	1	758 62
63	1056	1.4	1	941 115
64	1097	1.4	1	958 139
65	1358	1.4	1	1233 125
66	1590	1.4	1	1413 177
67	1468	1.4	1	1355 113
68	1411	1.4	1	1304 107
69	1110	1.4	1	808 302
70	901	1.4	1	784 117
71	883	1.4	1	606 277
72	776	1.4	1	647 129
73	876	1.4	1	697 179
74	901	1.4	1	812 89
75	1193	1.4	1	1059 134
76	1221	1.4	1	1125 96
77	1537	1.4	1	1450 87
78	6883	1.4	1	6623 260
79	6162	1.4	1	5992 170
80	4212	1.4	1	3887 325
81	2086	1.4	1	1990 96
82	1182	1.4	1	916 266
83	894	1.4	1	616 278
84	475	1.4	1	380 95
85	543	1.4	1	386 157
86	434	1.4	1	359 75
87	411	1.4	1	332 79
88	402	1.4	1	289 113
89	361	1.4	1	259 102
90	454	1.4	1	224 230
91	265	1.4	1	184 81
92	232	1.4	1	156 76
93	249	1.4	1	125 124
94	227	1.4	1	149 78
95	268	1.4	1	177 91
96	305	1.4	1	209 96
97	562	1.4	1	233 329
98	282	1.4	1	222 60
99	271	1.4	1	172 99
100	278	1.4	1	159 119
101	304	1.4	1	133 171
102	178	1.4	1	117 61
103	215	1.4	1	94 121
104	306	1.4	1	142 164
105	292	1.4	1	185 107
106	289	1.4	1	226 63
107	300	1.4	1	220 80
108	282	1.4	1	192 90
109	241	1.4	1	159 82
110	242	1.4	1	120 122
111	197	1.4	1	128 69
112	203	1.4	1	85 118
113	132	1.4	1	70 62
114	174	1.4	1	77 97
115	213	1.4	1	115 98
116	200	1.4	1	142 58
117	312	1.4	1	156 156
118	251	1.4	1	122 129
119	211	1.4	1	83 128
120	324	1.4	1	73 251
121	173	1.4	1	55 118
122	130	1.4	1	57 73
123	156	1.4	1	55 101
124	440	1.4	1	43 397
125	100	1.4	1	11 89
126	46	1.4	1	12 34
127	66	1.4	1	12 54
128	89	1.4	1	4 85
129	133	1.4	1	6 127
130	62	1.4	1	0 62
131	65	1.4	1	4 61
132	84	1.4	1	7 77
133	637	1.4	1	7 630
134	105	1.4	1	0 105
135	61	1.4	1	2 59
136	58	1.4	1	2 56
137	107	1.4	1	1 106
138	143	1.4	1	0 143
139	306	1.4	1	2 304
140	48	1.4	1	0 48
141	202	1.4	1	0 202
142	122	1.4	1	0 122
143	485	1.4	1	0 485
144	50	1.4	1	0 50
145	73	1.4	1	3 70
146	62	1.4	1	0 62
147	159	1.4	1	1 158
148	219	1.4	1	3 216
149	106	1.4	1	0 106
150	28	1.4	1	0 28
151	27	1.4	1	0 27

RUN STATISTICS FOR INPUT FILE: /scratch/gsartonl/metagenomics/00_data/CM12_L6_R1_001_TU3G2L89X8m0.fastq.gz
=============================================
23434803 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to '/work/FAC/FBM/DMF/pengel/spirit/gsartonl/metagenomics/01_trimmed/CM12_L6_R2_001_B3nABCk4rugm.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: /scratch/gsartonl/metagenomics/00_data/CM12_L6_R2_001_B3nABCk4rugm.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.10
Cutadapt version: 5.0
Python version: could not detect
Number of cores used for trimming: 7
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)
Maximum trimming error rate: 0.1 (default)
Maximum number of tolerated Ns: 1
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 80 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--outdir /work/FAC/FBM/DMF/pengel/spirit/gsartonl/metagenomics/01_trimmed/fastqc_trimmed/'
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 5.0). Setting -j -j 7
Writing final adapter and quality trimmed output to CM12_L6_R2_001_B3nABCk4rugm_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file /scratch/gsartonl/metagenomics/00_data/CM12_L6_R2_001_B3nABCk4rugm.fastq.gz <<< 
10000000 sequences processed
20000000 sequences processed
This is cutadapt 5.0 with Python 3.12.9
Command line parameters: -j 7 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA /scratch/gsartonl/metagenomics/00_data/CM12_L6_R2_001_B3nABCk4rugm.fastq.gz
Processing single-end reads on 7 cores ...

=== Summary ===

Total reads processed:              23,434,803
Reads with adapters:                 6,605,058 (28.2%)
Reads written (passing filters):    23,434,803 (100.0%)

Total basepairs processed: 3,538,655,253 bp
Quality-trimmed:              63,426,730 bp (1.8%)
Total written (filtered):  3,452,981,340 bp (97.6%)

=== Adapter 1 ===

Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 6605058 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-12 bp: 1

Bases preceding removed adapters:
  A: 25.5%
  C: 21.5%
  G: 22.0%
  T: 31.1%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	4753556	5858700.8	0	4753556
2	1074039	1464675.2	0	1074039
3	340514	366168.8	0	340514
4	69283	91542.2	0	69283
5	33742	22885.5	0	33742
6	10975	5721.4	0	10975
7	8058	1430.3	0	8058
8	6690	357.6	0	6690
9	7272	89.4	0	6993 279
10	7594	22.3	1	6020 1574
11	8736	5.6	1	7030 1706
12	8352	1.4	1	6827 1525
13	8362	1.4	1	7442 920
14	7257	1.4	1	6366 891
15	8126	1.4	1	7373 753
16	7587	1.4	1	6571 1016
17	6277	1.4	1	5404 873
18	5368	1.4	1	4522 846
19	5783	1.4	1	4908 875
20	5456	1.4	1	4478 978
21	4955	1.4	1	4102 853
22	5771	1.4	1	5052 719
23	4886	1.4	1	4458 428
24	5671	1.4	1	5163 508
25	6057	1.4	1	5371 686
26	5322	1.4	1	4725 597
27	4663	1.4	1	4180 483
28	4325	1.4	1	3870 455
29	4074	1.4	1	3657 417
30	2466	1.4	1	2023 443
31	3474	1.4	1	2972 502
32	3646	1.4	1	3268 378
33	2800	1.4	1	2428 372
34	3996	1.4	1	3618 378
35	4767	1.4	1	4317 450
36	4870	1.4	1	4533 337
37	2725	1.4	1	2260 465
38	2630	1.4	1	2256 374
39	2573	1.4	1	2231 342
40	2630	1.4	1	2242 388
41	3116	1.4	1	2438 678
42	3780	1.4	1	3065 715
43	2700	1.4	1	2250 450
44	3263	1.4	1	2835 428
45	3385	1.4	1	2782 603
46	3922	1.4	1	3418 504
47	4062	1.4	1	3360 702
48	2547	1.4	1	2179 368
49	2285	1.4	1	1937 348
50	1804	1.4	1	1373 431
51	1765	1.4	1	1358 407
52	2403	1.4	1	1933 470
53	2224	1.4	1	1827 397
54	2499	1.4	1	2095 404
55	2806	1.4	1	2433 373
56	3747	1.4	1	3336 411
57	1369	1.4	1	1093 276
58	2417	1.4	1	2117 300
59	2097	1.4	1	1900 197
60	1420	1.4	1	971 449
61	1346	1.4	1	1088 258
62	1674	1.4	1	1396 278
63	1358	1.4	1	1141 217
64	1656	1.4	1	1418 238
65	3136	1.4	1	2915 221
66	613	1.4	1	404 209
67	1667	1.4	1	1450 217
68	1880	1.4	1	1490 390
69	2004	1.4	1	1515 489
70	1212	1.4	1	940 272
71	1367	1.4	1	913 454
72	1400	1.4	1	1052 348
73	1259	1.4	1	980 279
74	1344	1.4	1	1093 251
75	2072	1.4	1	1598 474
76	1889	1.4	1	1495 394
77	2266	1.4	1	1802 464
78	2271	1.4	1	1830 441
79	1452	1.4	1	1214 238
80	1753	1.4	1	1278 475
81	1265	1.4	1	992 273
82	10553	1.4	1	10002 551
83	5566	1.4	1	4885 681
84	3584	1.4	1	3298 286
85	2026	1.4	1	1733 293
86	1303	1.4	1	1043 260
87	1038	1.4	1	772 266
88	1048	1.4	1	710 338
89	1174	1.4	1	708 466
90	1118	1.4	1	550 568
91	1359	1.4	1	759 600
92	926	1.4	1	540 386
93	667	1.4	1	365 302
94	568	1.4	1	315 253
95	513	1.4	1	308 205
96	778	1.4	1	457 321
97	802	1.4	1	378 424
98	633	1.4	1	383 250
99	597	1.4	1	326 271
100	624	1.4	1	350 274
101	579	1.4	1	302 277
102	458	1.4	1	245 213
103	562	1.4	1	305 257
104	567	1.4	1	279 288
105	611	1.4	1	349 262
106	1156	1.4	1	751 405
107	546	1.4	1	352 194
108	523	1.4	1	330 193
109	485	1.4	1	312 173
110	461	1.4	1	253 208
111	509	1.4	1	301 208
112	488	1.4	1	293 195
113	396	1.4	1	209 187
114	347	1.4	1	185 162
115	395	1.4	1	219 176
116	433	1.4	1	261 172
117	446	1.4	1	229 217
118	441	1.4	1	237 204
119	378	1.4	1	173 205
120	377	1.4	1	121 256
121	248	1.4	1	105 143
122	294	1.4	1	133 161
123	298	1.4	1	138 160
124	559	1.4	1	105 454
125	247	1.4	1	94 153
126	247	1.4	1	123 124
127	253	1.4	1	121 132
128	253	1.4	1	98 155
129	345	1.4	1	113 232
130	111	1.4	1	35 76
131	161	1.4	1	59 102
132	298	1.4	1	121 177
133	539	1.4	1	17 522
134	129	1.4	1	21 108
135	85	1.4	1	7 78
136	107	1.4	1	12 95
137	153	1.4	1	16 137
138	187	1.4	1	4 183
139	214	1.4	1	1 213
140	60	1.4	1	2 58
141	169	1.4	1	4 165
142	122	1.4	1	5 117
143	388	1.4	1	4 384
144	58	1.4	1	0 58
145	80	1.4	1	2 78
146	64	1.4	1	0 64
147	186	1.4	1	1 185
148	198	1.4	1	1 197
149	93	1.4	1	0 93
150	32	1.4	1	0 32
151	22	1.4	1	0 22

RUN STATISTICS FOR INPUT FILE: /scratch/gsartonl/metagenomics/00_data/CM12_L6_R2_001_B3nABCk4rugm.fastq.gz
=============================================
23434803 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files CM12_L6_R1_001_TU3G2L89X8m0_trimmed.fq.gz and CM12_L6_R2_001_B3nABCk4rugm_trimmed.fq.gz
Now renaming the output files

ORIGINAL FILE 1: >>CM12_L6_R1_001_TU3G2L89X8m0_trimmed.fq.gz<<	RENAMING TO:>>CM12_L6_R1_trimmed.fq.gz<<
ORIGINAL FILE 2: >>CM12_L6_R2_001_B3nABCk4rugm_trimmed.fq.gz<<	RENAMING TO:>>CM12_L6_R2_trimmed.fq.gz<<
file_1: CM12_L6_R1_trimmed.fq.gz, file_2: CM12_L6_R2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: CM12_L6_R1_trimmed.fq.gz and CM12_L6_R2_trimmed.fq.gz <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to CM12_L6_val_1.fq.gz
Writing validated paired-end Read 2 reads to CM12_L6_val_2.fq.gz

Total number of sequences analysed: 23434803

Number of sequence pairs removed because at least one read was shorter than the length cutoff (80 bp): 309140 (1.32%)
Number of sequence pairs removed because at least one read contained more N(s) than the specified limit of 1: 18606 (0.08%)


  >>> Now running FastQC on the validated data CM12_L6_val_1.fq.gz<<<

application/gzip
Started analysis of CM12_L6_val_1.fq.gz
Approx 5% complete for CM12_L6_val_1.fq.gz
Approx 10% complete for CM12_L6_val_1.fq.gz
Approx 15% complete for CM12_L6_val_1.fq.gz
Approx 20% complete for CM12_L6_val_1.fq.gz
Approx 25% complete for CM12_L6_val_1.fq.gz
Approx 30% complete for CM12_L6_val_1.fq.gz
Approx 35% complete for CM12_L6_val_1.fq.gz
Approx 40% complete for CM12_L6_val_1.fq.gz
Approx 45% complete for CM12_L6_val_1.fq.gz
Approx 50% complete for CM12_L6_val_1.fq.gz
Approx 55% complete for CM12_L6_val_1.fq.gz
Approx 60% complete for CM12_L6_val_1.fq.gz
Approx 65% complete for CM12_L6_val_1.fq.gz
Approx 70% complete for CM12_L6_val_1.fq.gz
Approx 75% complete for CM12_L6_val_1.fq.gz
Approx 80% complete for CM12_L6_val_1.fq.gz
Approx 85% complete for CM12_L6_val_1.fq.gz
Approx 90% complete for CM12_L6_val_1.fq.gz
Approx 95% complete for CM12_L6_val_1.fq.gz
Analysis complete for CM12_L6_val_1.fq.gz

  >>> Now running FastQC on the validated data CM12_L6_val_2.fq.gz<<<

application/gzip
Started analysis of CM12_L6_val_2.fq.gz
Approx 5% complete for CM12_L6_val_2.fq.gz
Approx 10% complete for CM12_L6_val_2.fq.gz
Approx 15% complete for CM12_L6_val_2.fq.gz
Approx 20% complete for CM12_L6_val_2.fq.gz
Approx 25% complete for CM12_L6_val_2.fq.gz
Approx 30% complete for CM12_L6_val_2.fq.gz
Approx 35% complete for CM12_L6_val_2.fq.gz
Approx 40% complete for CM12_L6_val_2.fq.gz
Approx 45% complete for CM12_L6_val_2.fq.gz
Approx 50% complete for CM12_L6_val_2.fq.gz
Approx 55% complete for CM12_L6_val_2.fq.gz
Approx 60% complete for CM12_L6_val_2.fq.gz
Approx 65% complete for CM12_L6_val_2.fq.gz
Approx 70% complete for CM12_L6_val_2.fq.gz
Approx 75% complete for CM12_L6_val_2.fq.gz
Approx 80% complete for CM12_L6_val_2.fq.gz
Approx 85% complete for CM12_L6_val_2.fq.gz
Approx 90% complete for CM12_L6_val_2.fq.gz
Approx 95% complete for CM12_L6_val_2.fq.gz
Analysis complete for CM12_L6_val_2.fq.gz
Deleting both intermediate output files CM12_L6_R1_trimmed.fq.gz and CM12_L6_R2_trimmed.fq.gz

====================================================================================================

